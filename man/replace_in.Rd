% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformations.R
\name{replace_in}
\alias{replace_in}
\title{Replace a Node in its Parent Node}
\usage{
replace_in(node, pattern, replacement, in_place = TRUE, ...)
}
\arguments{
\item{node}{(ASTNode) A node to search for matches.}

\item{pattern}{(ASTNode) A node to replace.}

\item{replacement}{(ASTNode) A replacement for the matched node.}

\item{in_place}{(logical) If \code{FALSE}, parent of \code{node} is copied before
replacement.}

\item{...}{Additional arguments to \code{\link[=match_object]{match_object()}}.}
}
\value{
The node after replacement.
}
\description{
This function replaces an ASTNode object in its parent expression with
another ASTNode object.
}
\details{
By default, this is an in-place transformation that modifies \code{node} as a
side effect!

This function only searches the immediate children of \code{node} for matches,
and only replaces the first match. To search all descendants of \code{node}, or
to replace all matches, use \code{\link[=replace_nodes]{replace_nodes()}} instead.
}
\examples{
node = quote_ast(x <- a + b)
ab = node$read
replace_in(node, ab, Symbol$new("t"))
}
\seealso{
\code{\link[=replace_nodes]{replace_nodes()}}
}
